from pwn import *
from Crypto.Cipher import AES
from Crypto.Util.Padding import pad, unpad
from Crypto.Cipher import PKCS1_OAEP
from Crypto.PublicKey import RSA
from Crypto.Util.number import long_to_bytes, bytes_to_long
import string
import math

# prima di tutto
# context.terminal=["tmux", "splitw", "-h"]

FLAG = [104, 251, 155, 244, 229, 208, 142,  37,   1, 191, 
  132, 142, 164,   3,  44, 103, 236, 200, 190,  82, 
  134, 226, 235, 235,  67,  91, 212, 126, 198,  78, 
   24, 195,  89, 225, 181, 200, 202, 214]
flag = [0]*38
# print(v5)
# v5 = 0xa4cf614c1e7c9fc2b685fede05fa2333532d0e47ab022b765444a563a6249f20fb0
v5 = [0x1e, 0x7c, 0x9f, 0xc2, 0xa4, 0xcf, 0x61, 0x4c,
0x05, 0xfa, 0x23, 0x33, 0xb6, 0x85, 0xfe, 0xde,
0xab, 0x02, 0x2b, 0x76, 0x53, 0x2d, 0x0e, 0x47,
0xa6, 0x24, 0x9f, 0x20, 0x54, 0x44, 0xa5, 0x63]

# v5 = [0xc2, 0x9f, 0x7c, 0x1e, 0x4c, 0x61, 0xcf, 0xa4,
# 0x33, 0x23, 0xfa, 0x05, 0xde, 0xfe, 0x85, 0xb6,
# 0x76, 0x2b, 0x02, 0xab, 0x47, 0x0e, 0x2d, 0x53,
# 0x20, 0x9f, 0x24, 0xa6, 0x63, 0xa5, 0x44, 0x54]

# v5 = [0xc5, 0x82, 0xef, 0x95, 0x8b, 0x94, 0xe3, 0xa0, 
# 0xb0, 0xec, 0x38, 0x87, 0x6c, 0x88, 0x1a, 0x73,
# 0x9d, 0x32, 0x29, 0x5c, 0xd1, 0x70, 0xd6, 0x9b,
# 0xa3, 0x02, 0x3d, 0x12, 0x87, 0x1f, 0xc6, 0x3f]

print(len (v5)) 
# v5[0] = FLAG[0] ^ ord('c')
# v5[1] = FLAG[1] - ord('c')
# v5[2] = FLAG[2] ^ ord('i')
# v5[3] = FLAG[3] - ord('t')
# v5[4] = FLAG[4] ^ ord('{')
# v5[37] = FLAG[5] - ord('}')
print('v5:', v5 )

for i in range(0, len(flag)):
    if (i & 1) != 0:
        flag[i] = (FLAG[i] - v5[i%32]) # dispari
    else:
        flag[i] = (FLAG[i] ^ v5[i%32]) # pari

print(flag)

for i in range(38):
    # print("len = ", len(flag))
    print(chr(flag[i]%256), end="")
print()
print(len(flag))
for i in range(0, 38):
    if (i & 1) != 0:
        if(flag[i] + v5[i%32] != FLAG[i]):
            print("Error")
    else:
        if(flag[i] ^ v5[i%32] != FLAG[i]):
            print("Error")